{"version":3,"sources":["Components/BreadCrumbs/Item.js","Components/BreadCrumbs/index.js","Pages/Projects/List.js","utils/ajax.js","Pages/Projects/Create.jsx","utils/tree.js","Components/VideoTree/NodeExpansion.js","Components/VideoTree/VideoTree.js","Pages/Projects/Edit.js","utils/utils.js","Pages/Projects/index.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","name","toggleEditing","bind","assertThisInitialized","updateName","doneEditing","console","log","setState","e","objectSpread","target","value","edit","prevProps","prevState","snapshot","_this$props","path","react_default","a","createElement","Fragment","onChange","onClick","react_router_dom","to","style","textTransform","React","Component","BreadCrumbs","links","map","l","i","key","float","listStyle","padding","BreadCrumbs_Item","undefined","List","redirectToCreate","match","Components_BreadCrumbs","react_router","concat","clear","url","ajax","get","urlencode","arguments","length","send","post","data","put","delete","requestType","qs","stringify","Promise","resolve","reject","axios","defaults","headers","token","document","querySelector","getAttribute","withCredentials","toLowerCase","then","response","catch","error","status","window","location","href","validationErrors","errors","request","message","config","Create","id","title","redirectToEdit","handleChange","createProject","Ajax","res","err","type","buildStructure","flat","result","item","parent_id","nodes","getRoot","getNodes","parentId","push","sort","b","NodeExpansion","node","updateNode","changeParent","_this2","className","availableParents","p","VideoTree","expandNode","toggleExpandNode","createNode","nodeId","tree","nodeIds","flattenStructure","n","filter","indexOf","stopPropagation","setTimeout","_","nodesKey","_this3","position","Components_VideoTree_NodeExpansion","buildTree","Edit","project","editProjectTitle","min","max","JSON","parse","Math","ceil","floor","random","toConsumableArray","newTitle","marginBottom","Components_VideoTree_VideoTree","Projects","_ref","exact","component","App","render","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ef42ea0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Item extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editing: false,\n            name: '',\n        };\n\n        this.toggleEditing = this.toggleEditing.bind(this);\n        this.updateName = this.updateName.bind(this);\n        this.doneEditing = this.doneEditing.bind(this);\n    }\n\n    toggleEditing() {\n        console.log('editing');\n        const editing = !this.state.editing;\n        this.setState({editing});\n    }\n\n    updateName(e) {\n        let state = {...this.state};\n        state.name = e.target.value;\n        this.setState(state);\n    }\n\n    doneEditing() {\n        let state = {...this.state};\n        state.editing = false;\n        this.setState(state);\n        this.props.edit(this.state.name);\n    }\n\n    componentDidMount() {\n        \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.name !== this.props.name) {\n            let state = {...this.state};\n            state.name = this.props.name;\n            this.setState(state);\n        }\n    }\n\n    render() {\n        const { path, name } = this.props;\n\n        return (\n            <>\n                {\n                    this.state.editing && this.props.edit\n                        ?   <>\n                                <input value={this.state.name} onChange={this.updateName} />\n                                <button onClick={this.doneEditing}>done</button>\n                            </>\n                        :   <>\n                                <Link to={path} style={{textTransform: 'capitalize'}}>{name}</Link>\n                                {this.props.edit ? <button onClick={this.toggleEditing}>edit</button> : ''}\n                            </>\n                }\n                \n            </>\n        );\n    }\n}\n\nItem.propTypes = {\n    path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    edit: PropTypes.func,\n}\n\nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Item from './Item';\n\nfunction BreadCrumbs(props) {\n\n    console.log(props);\n    return (\n        <ul>\n            {\n                props.links.map((l, i) => (\n                    <li key={i} style={{float: 'left', listStyle: 'none', padding: '5px'}}>\n                        <Item path={l.path} name={l.name} edit={l.edit ? l.edit : undefined } />\n                    </li>\n                ))\n            }\n        </ul>\n    );\n    \n}\n\nBreadCrumbs.propTypes = {\n    links: PropTypes.array.isRequired,\n}\n\nexport default BreadCrumbs;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport BreadCrumbs from '../../Components/BreadCrumbs';\n\nclass List extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirectToCreate: false,\n        }\n\n        this.redirectToCreate = this.redirectToCreate.bind(this);\n    }\n\n    redirectToCreate() {\n        this.setState({redirectToCreate: true});\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n            <>\n                <BreadCrumbs links={[{ name: 'projects', path: '/projects'}]}/>\n                <button onClick={this.redirectToCreate}>New Project</button>\n                { this.state.redirectToCreate ? <Redirect to={`${match.path}/create`} /> : '' }\n                <ul style={{clear: 'both'}}>\n                    <li><Link to={`${match.url}/1`} >Project 1</Link></li>\n                    <li><Link to={`${match.url}/2`} >Project 2</Link></li>\n                </ul>\n            </>\n        );    \n    }\n    \n}\n\nexport default List;","import axios from 'axios';\nimport qs from 'qs';\n\n\nexport default {\n\n\t/**\n\t * Send a Get request.\n\t *\n\t * @param {object} data\n\t */\n\tget(url, urlencode=true) {\n\t\treturn this.send( url, 'get', {}, urlencode);\n\t},\n\n\t/**\n\t * Send a POST request.\n\t *\n\t * @param {object} data\n\t */\n\tpost(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'post', data, urlencode);\n\t},\n\n\t/**\n\t * Send a PUT request.\n\t *\n\t * @param {object} data\n\t */\n\tput(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'put', data, urlencode);\n\t},\n\n\t/**\n\t * Send a DELETE request.\n\t *\n\t * @param {object} data\n\t */\n\tdelete(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'delete', data, urlencode);\n\t\t// Note: When sending 'params' instead of data, Axios will add ?id=177 to this.url. (If you data is {id: 177}).\n\t\t// And then if using Express you can get the params in the query (req.query.id).\n\t},\n\n\tsend( url, requestType, data={}, urlencode=true ) {\n\n\t\tif ( data.length > 0 && urlencode === true) {\n\t\t\tdata = qs.stringify(data);\n\t\t}\n\n\t\treturn new Promise(\n\t\t\t( resolve, reject ) => {\n\t\t\t\taxios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest'; // Tell server that this is a ajax request.\n\t\t\t\tconst token = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\t\t\t\tif (token) {\n\t\t\t\t\taxios.defaults.headers['CSRF-Token'] = token;\n\t\t\t\t}\n\t\t\t\taxios.defaults.withCredentials = true; // Send cookie to server.\n\t\t\t\taxios[ requestType.toLowerCase() ]( url, data )\n\t\t\t\t\t.then(response => resolve(response.data))\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tif (error.response) {\n\t\t\t\t\t\t\t// The request was made and the server responded with a status code\n\t\t\t\t\t\t\t// that falls out of the range of 2xx\n\t\t\t\t\t\t\t// console.log(error.response.data);\n\t\t\t\t\t\t\t// console.log(error.response.status);\n\t\t\t\t\t\t\t// console.log(error.response.headers);\n\n\t\t\t\t\t\t\t// If server session expired then just redirect to login page.\n\t\t\t\t\t\t\tconst status = error.response.status;\n\t\t\t\t\t\t\tif ( status == 401 || status == 403 || status == 419) {\n\t\t\t\t\t\t\t\tconsole.log('Ajax error: ', error);\n\t\t\t\t\t\t\t\twindow.location.href = '/login';\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (status == 422) {\n\t\t\t\t\t\t\t\treject( {validationErrors: error.response.data.errors});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treject( error.response.data );\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t} else if (error.request) {\n\t\t\t\t\t\t// The request was made but no response was received\n\t\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n\t\t\t\t\t\t// http.ClientRequest in node.js\n\t\t\t\t\t\tconsole.log(error.request);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t// Something happened in setting up the request that triggered an Error\n\t\t\t\t\t\tconsole.log('Error', error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(error.config);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t});\n\t},\n};\n","import React from 'react';\nimport BreadCrumbs from '../../Components/BreadCrumbs';\nimport { Redirect } from 'react-router-dom';\nimport Ajax from '../../utils/ajax';\n\nclass Create extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: 0,\n            title: '',\n            redirectToEdit: false,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.createProject = this.createProject.bind(this);\n    }\n\n    handleChange(e) {\n        let state = {...this.state};\n        // only have a title at this time\n        state.title = e.target.value;\n        this.setState(state);\n    }\n\n    createProject() {\n\n        // TODO import Ajax class and create project resource in Laravel\n        Ajax.post('/projects', {title: this.state.title})\n        .then(res => {\n            console.log(res);\n            // let state = {...this.state};\n            // state.id = 123;\n            // state.redirectToEdit = true;\n            // this.setState(state);\n        })\n        .catch(err => console.error(err));\n        \n    }\n\n    render() {\n        const links = [\n            { name: 'projects', path: '/projects'},\n            { name: 'create', path: '/projects/create'},\n        ];\n        return (\n            <>\n                <BreadCrumbs links={links}/>\n                <div>\n                    <input onChange={this.handleChange} type=\"text\" value={this.state.title} />\n                    <button onClick={this.createProject}>Create</button>\n                </div>\n                {\n                    this.state.redirectToEdit ? <Redirect to={`/projects/${this.state.id}`} /> : ''\n                }\n            </>\n        );\n    }\n}\n\nexport default Create;","function getRoot(flat) {\n    \n  for (let i = 0; i < flat.length; i++) {\n      let item = {...flat[i]};\n      if (item.parent_id === 0) {\n          item.nodes = [];\n          return item;\n      }\n  }\n\n  return {};\n}\n\nfunction getNodes(parentId, flat) {\n  let nodes = [];\n  for (let i = 0; i < flat.length; i++) {\n      let item = {...flat[i]};\n      if (item.parent_id === parentId) {\n          item.nodes = getNodes(item.id, flat);\n          nodes.push(item);\n      }\n  }\n  nodes.sort((a,b) => a.id -  b.id);\n  return nodes;\n}\n\nexport const buildStructure = function(flat) {\n  \n  let result = getRoot(flat);\n  if (result.length === 0) {\n      return result;\n  }\n\n  result.nodes = getNodes(result.id, flat)\n\n  return result;\n};\n\nexport const flattenStructure = function(tree) {\n\n  let nodes = [];\n  let node = {\n      id: tree.id,\n      parent_id: tree.parent_id,\n      title: tree.title,\n      url: tree.url,\n  };\n  nodes.push(node);\n\n  if (typeof tree.nodes !== 'undefined' && tree.nodes.length > 0) {\n      for (let i=0; i < tree.nodes.length; i++) {\n          const result = flattenStructure(tree.nodes[i]);\n          for (let i=0; i < result.length; i++) {\n              nodes.push(result[i]);\n          }\n      }\n  }\n\n  nodes = nodes.sort((a,b) => a.id - b.id);\n  return nodes;\n}","import React from 'react';\nimport './NodeExpansion.css';\n\n\nclass NodeExpansion extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            node: {\n                id: '',\n                title: '',\n                url: '',\n                parent_id: false,\n            },\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updateNode = this.updateNode.bind(this);\n        this.changeParent = this.changeParent.bind(this);\n    }\n\n    handleChange(e) {\n        // console.log(e.target.name);\n        let node = {...this.state.node};\n        node[e.target.name] = e.target.value;\n        this.setState({node});\n    }\n\n    changeParent(id) {\n        let node = {...this.state.node};\n        node.parent_id = id;\n        this.setState({node});\n    }\n\n    updateNode() {\n        this.props.updateNode(this.state.node);\n    }\n\n    componentDidMount() {\n        this.setState({node: this.props.node});\n    }\n\n    render() {\n        const { node } = this.state;\n        return (\n            <span className=\"node-expansion\">\n                <input \n                    onChange={this.handleChange} \n                    name=\"title\" \n                    value={node.title}\n                />\n                <input \n                    onChange={this.handleChange} \n                    name=\"url\" \n                    value={node.url}\n                />\n                {\n                    // todo exclude current parent_id and child node ids\n                    this.props.availableParents.map(p => (\n                        <span \n                            key={p.id} \n                            onClick={() => this.changeParent(p.id)}\n                            style={{padding: '5px'}}>\n                            {p.title}\n                        </span>\n                    ))\n                }\n                <button onClick={this.updateNode}>done</button>\n            </span>\n        );\n    }\n\n}\n\nexport default NodeExpansion;","import React from 'react';\nimport './VideoTree.css';\nimport PropTypes from 'prop-types';\n\nimport { buildStructure, flattenStructure } from '../../utils/tree.js';\n\nimport NodeExpansion from './NodeExpansion.js';\n\nclass VideoTree extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expandNode: 0, // node.id\n            nodes: [],\n        };\n\n        this.toggleExpandNode = this.toggleExpandNode.bind(this);\n        this.updateNode = this.updateNode.bind(this);\n        this.availableParents = this.availableParents.bind(this);\n        this.createNode = this.createNode.bind(this);\n    }\n\n    toggleExpandNode(e, nodeId) {\n        this.setState({expandNode: nodeId});\n    }\n\n    availableParents(node, tree) {\n        const flattenedNode = flattenStructure(node);\n        const nodeIds = flattenedNode.map(n => n.id);\n        return tree.filter(n => {\n            return nodeIds.indexOf(n.id) === -1  && n.id !== node.parent_id\n        });\n    }\n\n    createNode(e, nodeId) {\n        e.stopPropagation();\n        // e.nativeEvent.stopImmediatePropagation();\n        this.props.createNode(nodeId);\n        \n    }\n\n    updateNode(node) {\n        setTimeout(_ => this.setState({expandNode: 0}), 100);\n        this.props.updateNode(node);\n    }\n\n    buildTree(nodes, nodesKey) {\n        return (\n            <ul>\n            { \n                nodes.map(node => {\n                    return (\n                        <li key={'li_'+node.id}>\n                            <span style={{position: 'relative'}}\n                                onClick={(e) => this.toggleExpandNode(e, node.id)} \n                                className=\"node-title\"\n                            >\n                                {node.title}\n                                <button onClick={(e) => this.createNode(e, node.id)}>+</button>\n\n                                {\n                                    this.state.expandNode === node.id \n                                        ?   <NodeExpansion \n                                                node={node} \n                                                availableParents={this.availableParents(node, this.props.nodes)}\n                                                updateNode={this.updateNode} \n                                            />\n                                        : ''\n                                }\n                                \n                            </span>\n                            { \n                                typeof node[nodesKey] !== 'undefined' && node[nodesKey].length > 0\n                                    ? this.buildTree(node[nodesKey], nodesKey) \n                                    : '' \n                            }\n                        </li>\n                    );    \n                })\n            }\n            </ul>\n        );\n    }\n\n    componentDidMount() {\n        const nodes = [buildStructure(this.props.nodes)];\n        this.setState({nodes});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.nodes !== this.props.nodes) {\n            const nodes = [buildStructure(this.props.nodes)];\n            this.setState({nodes});\n        }\n    }\n\n    render() {\n        // e.g. your child nodes might have a different name so you can pass the key as a prop.\n        const nodesKey = this.props.nodesKey ? this.props.nodesKey : 'nodes';\n        return (\n            <div>\n                <div className=\"tree\">\n                    {this.buildTree(this.state.nodes, nodesKey)}\n                </div>\n            </div>\n        );\n    }\n}\n\nVideoTree.propTypes = {\n    nodesKey: PropTypes.string,\n    nodes: PropTypes.array.isRequired,\n    createNode: PropTypes.func.isRequired,\n    updateNode: PropTypes.func.isRequired,\n};\n\nexport default VideoTree;\n\n","import React from 'react';\nimport VideoTree from '../../Components/VideoTree/VideoTree.js';\nimport { generateRandomInt } from '../../utils/utils.js';\nimport BreadCrumbs from '../../Components/BreadCrumbs';\n\nclass Edit extends React.Component {\n  \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            project: {\n                title: '',\n            },\n            nodes: [], // todo nodes will be child of project\n        };\n\n        this.createNode = this.createNode.bind(this);\n        this.updateNode = this.updateNode.bind(this);\n        this.editProjectTitle = this.editProjectTitle.bind(this);\n    }\n\n    createNode(parentId) {\n        let nodes = this.state.nodes.map(n => JSON.parse(JSON.stringify(n)));\n        nodes.push({\n            id: generateRandomInt(10000000, 90000000),\n            parent_id: parentId,\n            title: 'New Node',\n            url: '',\n        });\n\n        this.setState({nodes});\n    }\n\n    updateNode(node) {\n        let nodes = [...this.state.nodes];\n\n        for (let i=0; i < nodes.length; i++) {\n            if (node.id === nodes[i].id) {\n                nodes[i] = node;\n                this.setState({nodes});\n                // TODO save node to server\n                return;\n            }\n        }\n    }\n\n    editProjectTitle(newTitle) {\n        let project = {...this.state.project};\n        project.title = newTitle;\n        this.setState({project});\n        // TODO save new title to server\n    }\n\n    componentDidMount() {\n        const projectNodes = [\n            {\n                id: 10,\n                parent_id: 0,\n                title: 'parent',\n                url: 'https://www.youtube.com/watch?v=Sh6lK57Cuk4',\n            },\n        \n            {\n                id: 3903209,\n                parent_id: 33,\n                title: 'great grand child 2',\n                url: '',\n                nodes: [],\n            },\n        \n            {\n                id: 677,\n                parent_id: 1888,\n                title: 'grand child 1',\n                url: '',\n                nodes: [],\n            },\n        \n            {\n                id: 1889,\n                parent_id: 10,\n                title: 'child 2',\n                url: '',\n            }, \n        \n            {\n                id: 33,\n                parent_id: 1889,\n                title: 'grand child 2',\n                url: '',\n            },\n        \n            {\n                id: 2903209,\n                parent_id: 33,\n                title: 'great grand child 1',\n                url: '',\n                nodes: [],\n            },\n\n            {\n                id: 1888,\n                parent_id: 10,\n                title: 'child 1',\n                url: 'https://www.youtube.com/watch?v=Sh6lK57Cuk4',\n            },\n        \n            {\n                id: 34,\n                parent_id: 1889,\n                title: 'grand child 3',\n                url: '',\n                nodes: [],\n            },\n        ];\n\n        let project = {...this.state.project};\n        project.title = 'Test title';\n        this.setState({project, nodes: projectNodes});\n    }\n\n    render() {\n        const links = [\n            { name: 'projects', path: '/projects'},\n            { name: this.state.project.title, path: '/projects/1', edit: this.editProjectTitle},\n        ];\n        return (\n            <>\n                <BreadCrumbs links={links}/>\n                <div style={{clear: 'both', marginBottom: '30px'}}></div>\n                <VideoTree \n                    nodes={this.state.nodes} \n                    nodesKey='nodes' \n                    createNode={this.createNode}\n                    updateNode={this.updateNode}\n                />\n            </>\n        )\n    }\n}\n\nexport default Edit;\n","export const generateRandomInt = function(min, max) {\n    min = Math.ceil(min);\n    max = Math.ceil(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List';\nimport Create from './Create';\nimport Edit from './Edit';\n\nfunction Projects({ match }) {\n    return (\n        <div>\n            <Switch>\n                <Route exact path={`${match.path}/create`} component={Create} />\n                <Route exact path={`${match.path}/:id`} component={Edit} />\n                <Route exact path={match.path} component={List} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Projects;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport Projects from './Pages/Projects';\n\nfunction App() {\n  return (\n      <Router>\n          <>\n            <Route exact path=\"/\" render={() => <Redirect to='/projects' />} />\n            <Route path=\"/projects\" component={Projects} />\n          </>\n      </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}