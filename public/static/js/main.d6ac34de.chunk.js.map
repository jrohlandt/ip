{"version":3,"sources":["Components/BreadCrumbs/Item.js","Components/BreadCrumbs/index.js","Pages/Projects/List.js","utils/ajax.js","Pages/Projects/Create.jsx","utils/tree.js","Components/VideoTree/NodeExpansion.js","Components/VideoTree/VideoTree.js","Pages/Projects/Edit.js","utils/utils.js","Pages/Projects/index.js","App.js","serviceWorker.js","index.js"],"names":["Item","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","name","toggleEditing","bind","assertThisInitialized","updateName","doneEditing","console","log","setState","e","objectSpread","target","value","edit","prevProps","prevState","snapshot","_this$props","path","react_default","a","createElement","Fragment","onChange","onClick","react_router_dom","to","style","textTransform","React","Component","BreadCrumbs","links","map","l","i","key","float","listStyle","padding","BreadCrumbs_Item","undefined","List","redirectToCreate","match","Components_BreadCrumbs","react_router","concat","clear","url","ajax","get","urlencode","arguments","length","send","post","data","put","delete","requestType","qs","stringify","Promise","resolve","reject","axios","defaults","headers","token","document","querySelector","getAttribute","withCredentials","toLowerCase","then","response","catch","error","status","window","location","href","validationErrors","errors","request","message","config","Create","id","title","redirectToEdit","handleChange","createProject","_this2","Ajax","res","project","err","type","buildStructure","flat","result","item","parent_id","nodes","getRoot","getNodes","parentId","push","sort","b","NodeExpansion","node","updateNode","changeParent","className","availableParents","p","VideoTree","expandNode","toggleExpandNode","createNode","nodeId","tree","nodeIds","flattenStructure","n","filter","indexOf","stopPropagation","setTimeout","_","nodesKey","_this3","position","Components_VideoTree_NodeExpansion","buildTree","Edit","editProjectTitle","min","max","JSON","parse","Math","ceil","floor","random","toConsumableArray","newTitle","params","marginBottom","Components_VideoTree_VideoTree","Projects","_ref","exact","component","App","render","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6ac34de.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Item extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editing: false,\n            name: '',\n        };\n\n        this.toggleEditing = this.toggleEditing.bind(this);\n        this.updateName = this.updateName.bind(this);\n        this.doneEditing = this.doneEditing.bind(this);\n    }\n\n    toggleEditing() {\n        console.log('editing');\n        const editing = !this.state.editing;\n        this.setState({editing});\n    }\n\n    updateName(e) {\n        let state = {...this.state};\n        state.name = e.target.value;\n        this.setState(state);\n    }\n\n    doneEditing() {\n        let state = {...this.state};\n        state.editing = false;\n        this.setState(state);\n        this.props.edit(this.state.name);\n    }\n\n    componentDidMount() {\n        \n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.name !== this.props.name) {\n            let state = {...this.state};\n            state.name = this.props.name;\n            this.setState(state);\n        }\n    }\n\n    render() {\n        const { path, name } = this.props;\n\n        return (\n            <>\n                {\n                    this.state.editing && this.props.edit\n                        ?   <>\n                                <input value={this.state.name} onChange={this.updateName} />\n                                <button onClick={this.doneEditing}>done</button>\n                            </>\n                        :   <>\n                                <Link to={path} style={{textTransform: 'capitalize'}}>{name}</Link>\n                                {this.props.edit ? <button onClick={this.toggleEditing}>edit</button> : ''}\n                            </>\n                }\n                \n            </>\n        );\n    }\n}\n\nItem.propTypes = {\n    path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    edit: PropTypes.func,\n}\n\nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Item from './Item';\n\nfunction BreadCrumbs(props) {\n\n    console.log(props);\n    return (\n        <ul>\n            {\n                props.links.map((l, i) => (\n                    <li key={i} style={{float: 'left', listStyle: 'none', padding: '5px'}}>\n                        <Item path={l.path} name={l.name} edit={l.edit ? l.edit : undefined } />\n                    </li>\n                ))\n            }\n        </ul>\n    );\n    \n}\n\nBreadCrumbs.propTypes = {\n    links: PropTypes.array.isRequired,\n}\n\nexport default BreadCrumbs;","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport BreadCrumbs from '../../Components/BreadCrumbs';\n\nclass List extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirectToCreate: false,\n        }\n\n        this.redirectToCreate = this.redirectToCreate.bind(this);\n    }\n\n    redirectToCreate() {\n        this.setState({redirectToCreate: true});\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n            <>\n                <BreadCrumbs links={[{ name: 'projects', path: '/projects'}]}/>\n                <button onClick={this.redirectToCreate}>New Project</button>\n                { this.state.redirectToCreate ? <Redirect to={`${match.path}/create`} /> : '' }\n                <ul style={{clear: 'both'}}>\n                    <li><Link to={`${match.url}/1`} >Project 1</Link></li>\n                    <li><Link to={`${match.url}/2`} >Project 2</Link></li>\n                </ul>\n            </>\n        );    \n    }\n    \n}\n\nexport default List;","import axios from 'axios';\nimport qs from 'qs';\n\n\nexport default {\n\n\t/**\n\t * Send a Get request.\n\t *\n\t * @param {object} data\n\t */\n\tget(url, urlencode=true) {\n\t\treturn this.send( url, 'get', {}, urlencode);\n\t},\n\n\t/**\n\t * Send a POST request.\n\t *\n\t * @param {object} data\n\t */\n\tpost(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'post', data, urlencode);\n\t},\n\n\t/**\n\t * Send a PUT request.\n\t *\n\t * @param {object} data\n\t */\n\tput(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'put', data, urlencode);\n\t},\n\n\t/**\n\t * Send a DELETE request.\n\t *\n\t * @param {object} data\n\t */\n\tdelete(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'delete', data, urlencode);\n\t\t// Note: When sending 'params' instead of data, Axios will add ?id=177 to this.url. (If you data is {id: 177}).\n\t\t// And then if using Express you can get the params in the query (req.query.id).\n\t},\n\n\tsend( url, requestType, data={}, urlencode=true ) {\n\n\t\tif ( data.length > 0 && urlencode === true) {\n\t\t\tdata = qs.stringify(data);\n\t\t}\n\n\t\treturn new Promise(\n\t\t\t( resolve, reject ) => {\n\t\t\t\taxios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest'; // Tell server that this is a ajax request.\n\t\t\t\tconst token = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\t\t\t\tif (token) {\n\t\t\t\t\taxios.defaults.headers['CSRF-Token'] = token;\n\t\t\t\t}\n\t\t\t\taxios.defaults.withCredentials = true; // Send cookie to server.\n\t\t\t\taxios[ requestType.toLowerCase() ]( url, data )\n\t\t\t\t\t.then(response => resolve(response.data))\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tif (error.response) {\n\t\t\t\t\t\t\t// The request was made and the server responded with a status code\n\t\t\t\t\t\t\t// that falls out of the range of 2xx\n\t\t\t\t\t\t\t// console.log(error.response.data);\n\t\t\t\t\t\t\t// console.log(error.response.status);\n\t\t\t\t\t\t\t// console.log(error.response.headers);\n\n\t\t\t\t\t\t\t// If server session expired then just redirect to login page.\n\t\t\t\t\t\t\tconst status = error.response.status;\n\t\t\t\t\t\t\tif ( status == 401 || status == 403 || status == 419) {\n\t\t\t\t\t\t\t\tconsole.log('Ajax error: ', error);\n\t\t\t\t\t\t\t\twindow.location.href = '/login';\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (status == 422) {\n\t\t\t\t\t\t\t\treject( {validationErrors: error.response.data.errors});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treject( error.response.data );\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t} else if (error.request) {\n\t\t\t\t\t\t// The request was made but no response was received\n\t\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n\t\t\t\t\t\t// http.ClientRequest in node.js\n\t\t\t\t\t\tconsole.log(error.request);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t// Something happened in setting up the request that triggered an Error\n\t\t\t\t\t\tconsole.log('Error', error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(error.config);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t});\n\t},\n};\n","import React from 'react';\nimport BreadCrumbs from '../../Components/BreadCrumbs';\nimport { Redirect } from 'react-router-dom';\nimport Ajax from '../../utils/ajax';\n\nclass Create extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: 0,\n            title: '',\n            redirectToEdit: false,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.createProject = this.createProject.bind(this);\n    }\n\n    handleChange(e) {\n        let state = {...this.state};\n        // only have a title at this time\n        state.title = e.target.value;\n        this.setState(state);\n    }\n\n    createProject() {\n\n        // TODO import Ajax class and create project resource in Laravel\n        Ajax.post('/projects', {title: this.state.title})\n        .then(res => {\n            console.log(res);\n            if (typeof res.project.id !== 'undefined') {\n                let state = {...this.state};\n                state.id = res.project.id;\n                state.redirectToEdit = true;\n                this.setState(state);    \n            }\n            \n        })\n        .catch(err => console.error(err));\n        \n    }\n\n    render() {\n        const links = [\n            { name: 'projects', path: '/projects'},\n            { name: 'create', path: '/projects/create'},\n        ];\n        return (\n            <>\n                <BreadCrumbs links={links}/>\n                <div>\n                    <input onChange={this.handleChange} type=\"text\" value={this.state.title} />\n                    <button onClick={this.createProject}>Create</button>\n                </div>\n                {\n                    this.state.redirectToEdit ? <Redirect to={`/projects/${this.state.id}`} /> : ''\n                }\n            </>\n        );\n    }\n}\n\nexport default Create;","function getRoot(flat) {\n    \n  for (let i = 0; i < flat.length; i++) {\n      let item = {...flat[i]};\n      if (item.parent_id === 0) {\n          item.nodes = [];\n          return item;\n      }\n  }\n\n  return {};\n}\n\nfunction getNodes(parentId, flat) {\n  let nodes = [];\n  for (let i = 0; i < flat.length; i++) {\n      let item = {...flat[i]};\n      if (item.parent_id === parentId) {\n          item.nodes = getNodes(item.id, flat);\n          nodes.push(item);\n      }\n  }\n  nodes.sort((a,b) => a.id -  b.id);\n  return nodes;\n}\n\nexport const buildStructure = function(flat) {\n  \n  let result = getRoot(flat);\n  if (result.length === 0) {\n      return result;\n  }\n\n  result.nodes = getNodes(result.id, flat)\n\n  return result;\n};\n\nexport const flattenStructure = function(tree) {\n\n  let nodes = [];\n  let node = {\n      id: tree.id,\n      parent_id: tree.parent_id,\n      title: tree.title,\n      url: tree.url,\n  };\n  nodes.push(node);\n\n  if (typeof tree.nodes !== 'undefined' && tree.nodes.length > 0) {\n      for (let i=0; i < tree.nodes.length; i++) {\n          const result = flattenStructure(tree.nodes[i]);\n          for (let i=0; i < result.length; i++) {\n              nodes.push(result[i]);\n          }\n      }\n  }\n\n  nodes = nodes.sort((a,b) => a.id - b.id);\n  return nodes;\n}","import React from 'react';\nimport './NodeExpansion.css';\n\n\nclass NodeExpansion extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            node: {\n                id: '',\n                title: '',\n                url: '',\n                parent_id: false,\n            },\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updateNode = this.updateNode.bind(this);\n        this.changeParent = this.changeParent.bind(this);\n    }\n\n    handleChange(e) {\n        // console.log(e.target.name);\n        let node = {...this.state.node};\n        node[e.target.name] = e.target.value;\n        this.setState({node});\n    }\n\n    changeParent(id) {\n        let node = {...this.state.node};\n        node.parent_id = id;\n        this.setState({node});\n    }\n\n    updateNode() {\n        this.props.updateNode(this.state.node);\n    }\n\n    componentDidMount() {\n        this.setState({node: this.props.node});\n    }\n\n    render() {\n        const { node } = this.state;\n        return (\n            <span className=\"node-expansion\">\n                <input \n                    onChange={this.handleChange} \n                    name=\"title\" \n                    value={node.title}\n                />\n                <input \n                    onChange={this.handleChange} \n                    name=\"url\" \n                    value={node.url}\n                />\n                {\n                    // todo exclude current parent_id and child node ids\n                    this.props.availableParents.map(p => (\n                        <span \n                            key={p.id} \n                            onClick={() => this.changeParent(p.id)}\n                            style={{padding: '5px'}}>\n                            {p.title}\n                        </span>\n                    ))\n                }\n                <button onClick={this.updateNode}>done</button>\n            </span>\n        );\n    }\n\n}\n\nexport default NodeExpansion;","import React from 'react';\nimport './VideoTree.css';\nimport PropTypes from 'prop-types';\n\nimport { buildStructure, flattenStructure } from '../../utils/tree.js';\n\nimport NodeExpansion from './NodeExpansion.js';\n\nclass VideoTree extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expandNode: 0, // node.id\n            nodes: [],\n        };\n\n        this.toggleExpandNode = this.toggleExpandNode.bind(this);\n        this.updateNode = this.updateNode.bind(this);\n        this.availableParents = this.availableParents.bind(this);\n        this.createNode = this.createNode.bind(this);\n    }\n\n    toggleExpandNode(e, nodeId) {\n        this.setState({expandNode: nodeId});\n    }\n\n    availableParents(node, tree) {\n        const flattenedNode = flattenStructure(node);\n        const nodeIds = flattenedNode.map(n => n.id);\n        return tree.filter(n => {\n            return nodeIds.indexOf(n.id) === -1  && n.id !== node.parent_id\n        });\n    }\n\n    createNode(e, nodeId) {\n        e.stopPropagation();\n        // e.nativeEvent.stopImmediatePropagation();\n        this.props.createNode(nodeId);\n        \n    }\n\n    updateNode(node) {\n        setTimeout(_ => this.setState({expandNode: 0}), 100);\n        this.props.updateNode(node);\n    }\n\n    buildTree(nodes, nodesKey) {\n        return (\n            <ul>\n            { \n                nodes.map(node => {\n                    return (\n                        <li key={'li_'+node.id}>\n                            <span style={{position: 'relative'}}\n                                onClick={(e) => this.toggleExpandNode(e, node.id)} \n                                className=\"node-title\"\n                            >\n                                {node.title}\n                                <button onClick={(e) => this.createNode(e, node.id)}>+</button>\n\n                                {\n                                    this.state.expandNode === node.id \n                                        ?   <NodeExpansion \n                                                node={node} \n                                                availableParents={this.availableParents(node, this.props.nodes)}\n                                                updateNode={this.updateNode} \n                                            />\n                                        : ''\n                                }\n                                \n                            </span>\n                            { \n                                typeof node[nodesKey] !== 'undefined' && node[nodesKey].length > 0\n                                    ? this.buildTree(node[nodesKey], nodesKey) \n                                    : '' \n                            }\n                        </li>\n                    );    \n                })\n            }\n            </ul>\n        );\n    }\n\n    componentDidMount() {\n        const nodes = [buildStructure(this.props.nodes)];\n        this.setState({nodes});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.nodes !== this.props.nodes) {\n            const nodes = [buildStructure(this.props.nodes)];\n            this.setState({nodes});\n        }\n    }\n\n    render() {\n        // e.g. your child nodes might have a different name so you can pass the key as a prop.\n        const nodesKey = this.props.nodesKey ? this.props.nodesKey : 'nodes';\n        return (\n            <div>\n                <div className=\"tree\">\n                    {this.buildTree(this.state.nodes, nodesKey)}\n                </div>\n            </div>\n        );\n    }\n}\n\nVideoTree.propTypes = {\n    nodesKey: PropTypes.string,\n    nodes: PropTypes.array.isRequired,\n    createNode: PropTypes.func.isRequired,\n    updateNode: PropTypes.func.isRequired,\n};\n\nexport default VideoTree;\n\n","import React from 'react';\nimport VideoTree from '../../Components/VideoTree/VideoTree.js';\nimport { generateRandomInt } from '../../utils/utils.js';\nimport BreadCrumbs from '../../Components/BreadCrumbs';\nimport Ajax from '../../utils/ajax';\n\nclass Edit extends React.Component {\n  \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            project: {\n                title: '',\n            },\n            nodes: [], // todo nodes will be child of project\n        };\n\n        this.createNode = this.createNode.bind(this);\n        this.updateNode = this.updateNode.bind(this);\n        this.editProjectTitle = this.editProjectTitle.bind(this);\n    }\n\n    createNode(parentId) {\n        let nodes = this.state.nodes.map(n => JSON.parse(JSON.stringify(n)));\n        nodes.push({\n            id: generateRandomInt(10000000, 90000000),\n            parent_id: parentId,\n            title: 'New Node',\n            url: '',\n        });\n\n        this.setState({nodes});\n    }\n\n    updateNode(node) {\n        let nodes = [...this.state.nodes];\n\n        for (let i=0; i < nodes.length; i++) {\n            if (node.id === nodes[i].id) {\n                nodes[i] = node;\n                this.setState({nodes});\n                // TODO save node to server\n                return;\n            }\n        }\n    }\n\n    editProjectTitle(newTitle) {\n        let project = {...this.state.project};\n        project.title = newTitle;\n        this.setState({project});\n        // TODO save new title to server\n    }\n\n    componentDidMount() {\n        // const projectNodes = [\n        //     {\n        //         id: 10,\n        //         parent_id: 0,\n        //         title: 'parent',\n        //         url: 'https://www.youtube.com/watch?v=Sh6lK57Cuk4',\n        //     },\n        \n        //     {\n        //         id: 3903209,\n        //         parent_id: 33,\n        //         title: 'great grand child 2',\n        //         url: '',\n        //         nodes: [],\n        //     },\n        \n        //     {\n        //         id: 677,\n        //         parent_id: 1888,\n        //         title: 'grand child 1',\n        //         url: '',\n        //         nodes: [],\n        //     },\n        \n        //     {\n        //         id: 1889,\n        //         parent_id: 10,\n        //         title: 'child 2',\n        //         url: '',\n        //     }, \n        \n        //     {\n        //         id: 33,\n        //         parent_id: 1889,\n        //         title: 'grand child 2',\n        //         url: '',\n        //     },\n        \n        //     {\n        //         id: 2903209,\n        //         parent_id: 33,\n        //         title: 'great grand child 1',\n        //         url: '',\n        //         nodes: [],\n        //     },\n\n        //     {\n        //         id: 1888,\n        //         parent_id: 10,\n        //         title: 'child 1',\n        //         url: 'https://www.youtube.com/watch?v=Sh6lK57Cuk4',\n        //     },\n        \n        //     {\n        //         id: 34,\n        //         parent_id: 1889,\n        //         title: 'grand child 3',\n        //         url: '',\n        //         nodes: [],\n        //     },\n        // ];\n\n        // let project = {...this.state.project};\n        // project.title = 'Test title';\n        // this.setState({project, nodes: projectNodes});\n        Ajax.get(`/projects/${this.props.match.params.id}`, [])\n            .then(res => {\n                if (typeof res.project.id !== 'undefined') {\n                    let state = {...this.state};\n                    state.project = res.project;\n                    if (typeof res.project.nodes !== 'undefined') {\n                        state.nodes = res.project.nodes;\n                    }\n                    this.setState(state);    \n                }\n            })\n            .catch(err => console.error(err));\n    }\n\n    render() {\n        const links = [\n            { name: 'projects', path: '/projects'},\n            { name: this.state.project.title, path: `/projects/${this.props.match.params.id}`, edit: this.editProjectTitle},\n        ];\n        return (\n            <>\n                <BreadCrumbs links={links}/>\n                <div style={{clear: 'both', marginBottom: '30px'}}></div>\n                { \n                    this.state.nodes.length < 1 \n                        ? ''\n                        :   <VideoTree \n                                nodes={this.state.nodes} \n                                nodesKey='nodes' \n                                createNode={this.createNode}\n                                updateNode={this.updateNode}\n                            />\n                }\n            </>\n        )\n    }\n}\n\nexport default Edit;\n","export const generateRandomInt = function(min, max) {\n    min = Math.ceil(min);\n    max = Math.ceil(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport List from './List';\nimport Create from './Create';\nimport Edit from './Edit';\n\nfunction Projects({ match }) {\n    return (\n        <div>\n            <Switch>\n                <Route exact path={`${match.path}/create`} component={Create} />\n                <Route exact path={`${match.path}/:id`} component={Edit} />\n                <Route exact path={match.path} component={List} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default Projects;","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\n\nimport Projects from './Pages/Projects';\n\nfunction App() {\n  return (\n      <Router>\n          <>\n            <Route exact path=\"/\" render={() => <Redirect to='/projects' />} />\n            <Route path=\"/projects\" component={Projects} />\n          </>\n      </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}